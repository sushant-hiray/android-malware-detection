from optparse import OptionParser
import os
import fnmatch
from xml.dom import minidom

def extractapks(path):
    apkfiles = []
    fp = open("apk.txt","w")
    for root, dirnames, filenames in os.walk(path):
          for filename in fnmatch.filter(filenames, '*.apk'):
                    apkfiles.append(os.path.join(root, filename))
                    fp.write(os.path.join(root, filename))
                    fp.write("\n")
                    command = "cd apks ; apktool -q d -f "
                    command = command + os.path.join(root, filename)
                    os.system(command)
                    command = "cd apks; cd " + filename[:-4]
                    command = command  + " ; mv AndroidManifest.xml "
                    command = command + filename[:-4] + "-manifest.xml"
                    os.system(command)
    fp.close()

def parsexml(xml):
    xmldom = minidom.parse(xml)
    permlist = xmldom.getElementsByTagName('uses-permission')
    return permlist

def writeperms():
    fp = open('perm-dump.txt','w')
    fp.write('\n')
    for root, dirnames, filenames in os.walk("apks/"):
          for filename in fnmatch.filter(filenames, '*-manifest.xml'):
              permlist = parsexml(os.path.join(root,filename))
              fp.write(filename[:-13])
              fp.write(' : ')
              getallperm(permlist,fp)
              fp.write('\n')
    fp.close()

def getallperm(permlist,fp):
    for permission in permlist:
        fp.write(permission.attributes['android:name'].value)
        fp.write(' , ')

def getpermclass(permission):
    rule1 = []
    rule2 = []
    rule3 = []
    rule4 = []
    rule5 = []
    rule6 = []
    rule7 = []
    rule8 = []
    rule9 = []
    
    perm1=['SET_DEBUG_APP']
    perm2=['PHONE_STATE','RECORD_AUDIO','INTERNET']
    perm3=['PROCESS_OUTGOING_CALL','RECORD_AUDIO','INTERNET']
    perm4=['ACCESS_FINE_LOCATION','INTERNET','RECEIVE_BOOT_COMPLETE']
    perm5=['ACCESS_COARSE_LOCATION','INTERNET','RECEIVE_BOOT_COMPLETE']
    perm6=['RECEIVE_SMS','WRITE_SMS']
    perm7=['SEND_SMS','WRITE_SMS']
    perm8=['INSTALL_SHORTCUT','UNINSTALL_SHORTCUT']
    perm9=['SET_PREFERRED_APPLICATION']
    
    permlist=[['SET_DEBUG_APP'],
            ['PHONE_STATE','RECORD_AUDIO','INTERNET'],
            ['PROCESS_OUTGOING_CALL','RECORD_AUDIO','INTERNET'],
            ['ACCESS_FINE_LOCATION','INTERNET','RECEIVE_BOOT_COMPLETE'],
            ['ACCESS_COARSE_LOCATION','INTERNET','RECEIVE_BOOT_COMPLETE'],
            ['RECEIVE_SMS','WRITE_SMS'],
            ['SEND_SMS','WRITE_SMS'],
            ['INSTALL_SHORTCUT','UNINSTALL_SHORTCUT'],
            ['SET_PREFERRED_APPLICATION']]
    
    values=[]
    for item in permlist:
        flag = 0
        for perm in item:
            if perm in permission:
                flag = 1
        values.append(flag)
    return values

def classifyperm():
    fp = open('perm-dump.txt','r')
    for line in fp:
        sp = line.split(":")
        appname = sp[0]
        permissions = sp[1].split(",")
        perm = [0,0,0,0,0,0,0,0,0]
        for permission in permissions:
            perm_ret = getpermclass(permission)
            perm = [a + b for a,b in zip(perm,perm_ret)]
        print perm
    fp.close()


if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option("-a","--all", action="store_true", dest="all", default=None, help="Run the entire script")
    parser.add_option("-p", "--process", action="store_true", dest="process", default=None, help="Processing xmls")
    parser.add_option("-e", "--extract", action="store_true", dest="extract", default=None, help="Extractin xmls from apk")
    parser.add_option("-d", "--clean", action="store_true", dest="clean", default=None, help="Clean previous processed files")
    parser.add_option("-c", "--classify", action="store_true", dest="classify", default=None, help="Classify the permissions")
    (options, args) = parser.parse_args()

    if options.all:
        options.process = options.extract = True

    if options.extract:
        print "Extracting apks"
        path="/home/sushant/code/"
        extractapks(path)
        print "Done extracting"

    if options.process:
        print "Processing all the apks"
        writeperms()
        print "Done processing: check file `perm-dump.txt`"

    if options.clean:
        print "Cleaning Up"

    if options.classify:
        classifyperm()


