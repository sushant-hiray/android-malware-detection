from optparse import OptionParser
import os
import fnmatch
from xml.dom import minidom

def extractapks(path):
    apkfiles = []
    fp = open("apk.txt","w")
    for root, dirnames, filenames in os.walk(path):
          for filename in fnmatch.filter(filenames, '*.apk'):
                    apkfiles.append(os.path.join(root, filename))
                    fp.write(os.path.join(root, filename))
                    fp.write("\n")
                    command = "cd apks ; apktool -q d -f "
                    command = command + os.path.join(root, filename)
                    os.system(command)
                    command = "cd apks; cd " + filename[:-4]
                    command = command  + " ; mv AndroidManifest.xml "
                    command = command + filename[:-4] + "-manifest.xml"
                    os.system(command)
    fp.close()

def parsexml(xml):
    xmldom = minidom.parse(xml)
    permlist = xmldom.getElementsByTagName('uses-permission')
    return permlist

def writeperms():
    fp = open('perm-dump.txt','w')
    fp.write('\n')
    for root, dirnames, filenames in os.walk("apks/"):
          for filename in fnmatch.filter(filenames, '*-manifest.xml'):
              permlist = parsexml(os.path.join(root,filename))
              fp.write(filename[:-13])
              fp.write(' : ')
              getallperm(permlist,fp)
              fp.write('\n')

def getallperm(permlist,fp):
    for permission in permlist:
        fp.write(permission.attributes['android:name'].value)
        fp.write(' , ')


if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option("-a","--all", action="store_true", dest="all", default=None, help="Run the entire script")
    parser.add_option("-p", "--process", action="store_true", dest="process", default=None, help="Processing xmls")
    parser.add_option("-e", "--extract", action="store_true", dest="extract", default=None, help="Extractin xmls from apk")
    parser.add_option("-d", "--clean", action="store_true", dest="clean", default=None, help="Clean previous processed files")
    (options, args) = parser.parse_args()

    if options.all:
        options.process = options.extract = True

    if options.extract:
        print "Extracting apks"
        path="/home/sushant/"
        extractapks(path)
        print "Done extracting"

    if options.process:
        print "Processing all the apks"
        writeperms()
        print "Done processing: check file `perm-dump.txt`"

    if options.clean:
        print "Cleaning Up"



